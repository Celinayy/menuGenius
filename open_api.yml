openapi: '3.0.2'
info:
  title: 'MenuGenius API'
  version: '1.0'
  description: 'A MenuGenius digitális étlap és foglalási rendszer API-ja.'
  termsOfService: http://menugenius.com/terms-of-use
  contact:
    name: MenuGenius Support
    url: https://www.menugenius.com/contact-us/
    email: menugenius@gmail.com
  license:
    name: MenuGenius Licence
    url: http://licence.foo.com
servers:
  - url: http://127.0.0.1:8000/api
    description: Dev Server
paths:

  /register:
    post: 
      tags: ['Felhasználókezelés']
      summary: Felhasználó regisztráció
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 50
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                  maxLength: 255
                password_confirmation:
                  type: string
                  minLength: 6
                  maxLength: 255
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/user'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Az érvénytelen adatok miatti hibaüzenet
  /login:
    post:
      tags: ['Felhasználókezelés']
      summary: Felhasználó bejelentkezés
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                  maxLength: 255
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/user'

        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Az érvénytelen adatok miatti hibaüzenet
 
  /logout:
    post:
      tags: ['Felhasználókezelés']
      summary: Felhasználó kijelentkezés
      security:
        - bearerAuth: ['admin', 'user']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Sikeresen kijelentkeztetve
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Az érvénytelen hitelesítő adatok miatti hibaüzenet
  /user:
    get:
      tags: ['Felhasználókezelés']
      summary: 'Bejelentkezett felhasználó adatainak lekérése'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                unknown_user:
                  summary: Ismeretlen felhasználó!
                  value: 
                    error: Ismeretlen felhasználó!
    put:
      tags: ['Felhasználókezelés']
      summary: 'Felhasználó saját adatainak módosítása'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                unknown_user:
                  summary: Ismeretlen felhasználó!
                  value: 
                    error: Ismeretlen felhasználó!

  /purchase:
    get:
      tags: ['Vásárlások kezelése']
      summary: 'Admin/User : összes/saját vásárlás lekérése tokennel'
      security:
        - bearerAuth: ['admin', 'user']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/adminPurchaseList'
                    - $ref: '#/components/schemas/userPurchaseList'
        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                error: Ismeretlen felhasználó!
    post:
      tags: ['Vásárlások kezelése']
      summary: Létrehoz egy új vásárlást
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_time: 
                  type: string
                  example: "2022-01-14T12:30:00"
                total_pay:
                  type: integer
                  example: 10000
                status:
                  type: string
                  example: ordered
                paid:
                  type: boolean
                  example: true
                desk_id:
                  type: integer
                  example: 2
                user_id:
                  type: integer
                  example: 4
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      quantity:
                        type: integer
                        example: 1
      responses:
        '201':
          description: A vásárlás létrehozva!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    $ref: '#/components/schemas/purchase'
        '400':
          description: Helytelen kérési formátum
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Helytelen kérési formátum
    put:
      tags: ['Vásárlások kezelése']
      summary: 'Admin/User : bármelyik/saját vásárlás módosítása tokennel'
      security:
        - bearerAuth: ['admin', 'user']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/purchase'
  /purchase/{id}:
    get:
      tags: ['Vásárlások kezelése']
      summary: 'Egy vásárlás lekérése id alapján'
      security:
        - bearerAuth: ['admin', 'user']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchase'
        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                error: Ismeretlen felhasználó!

  /reservation:
    get:
      tags: ['Foglalások kezelése']
      summary: 'Admin/User : összes/saját foglalás lekérése tokennel'
      security:
        - bearerAuth: ['admin', 'user']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/adminReservationList'
                    - $ref: '#/components/schemas/userReservationList'
        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                error: Ismeretlen felhasználó!

    post:
      tags: ['Foglalások kezelése']
      summary: Létrehoz egy új foglalást
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number_of_guests: 
                  type: integer
                  example: 6
                checkin_date:
                  type: string
                  example: "2022-01-14T12:30:00"
                checkout_date:
                  type: string
                  example: "2022-01-14T12:30:00"
                name:
                  type: string
                  example: Tóth Ottó
                phone:
                  type: string
                  example: +36 30 281 1288
                desk_id:
                  type: integer
                  example: 2
                user_id:
                  type: integer
                  example: 4
                closed:
                  type: boolean
                  example: false
      responses:
        '201':
          description: A foglalás létrehozva!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    $ref: '#/components/schemas/reservation'
        '400':
          description: Helytelen kérési formátum
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Helytelen kérési formátum
    put:
      tags: ['Foglalások kezelése']
      summary: 'Admin/User : bármelyik/saját foglalás módosítása tokennel'
      security:
        - bearerAuth: ['admin', 'user']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/reservation'
        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                error: Ismeretlen felhasználó!
  /reservation/{id}:
    get:
      tags: ['Foglalások kezelése']
      summary: 'Egy foglalás lekérése id alapján'
      security:
        - bearerAuth: ['admin', 'user']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
        '401':
          description: Ismeretlen felhasználó!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                error: Ismeretlen felhasználó!

  /desk:
    get:
      tags: ['Foglalások kezelése']
      summary: 'Az összes asztal lekérése az adatbázisból.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/desk'

  /product:
    get:
      tags: ['Termékekkel kapcsolatos lekérések']
      summary: 'Az összes termék adatainak lekérése az adatbázisból.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'

  /product/{id}:
    get:
      tags: ['Termékekkel kapcsolatos lekérések']
      summary: 'Egy termék adatainak lekérése id alapján'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/product'

  /allergen:
    get:
      tags: ['Termékekkel kapcsolatos lekérések']
      summary: 'Az összes allergén lekérése az adatbázisból.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/allergen'

  /category:
    get:
      tags: ['Termékekkel kapcsolatos lekérések']
      summary: 'Az összes kategória lekérése az adatbázisból.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
            
  /ingredient:
    get:
      tags: ['Termékekkel kapcsolatos lekérések']
      summary: 'Az összes alapanyag lekérése az adatbázisból.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ingredient'




components:
  schemas:
    product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Töltött tojás'
        description:
          type: string
          example: 'Tejfölös-mustáros krémmel töltött főtt tojás.'
        category_id:
          type: integer
          example: 1
        packing:
          type: string
          example: '1 adag'
        price:
          type: integer
          example: 3000
        is_food:
          type: boolean
          example: 1
        image_id:
          type: integer
          example: 69
        image:
          $ref: '#/components/schemas/image'
        category:
          $ref: '#/components/schemas/category'
        ingredients:
          type: array
          items: 
            $ref: '#/components/schemas/ingredient'

    category:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'előétel'
        allergens:
          type: array
          items:
            $ref: '#/components/schemas/allergen'
    
    image:
      type: object
      properties:
        id:
          type: integer
          example: 69
        img_name:
          type: string
          example: 'toltott_tojas.png'
        img_data:
          type: string
          example: 'iVBORw0KGgoAAAANSUhEUgAA…Nym8wAAAABJRU5ErkJggg==..'
    
    ingredient:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: 'tojás'
        allergens:
          type: array
          items: 
            $ref: '#/components/schemas/allergen'

    allergen:
      type: object
      properties:
        id: 
          type: integer
          example: 9
        code:
          type: number
          example: 3.00
        name:
          type: string
          example: 'tojás'
    
    purchase:
      type: object
      properties:
        id:
          type: integer
          example: 1
        date_time:
          type: string
          example: "1993-12-07 02:42:15"
        total_pay:
          type: integer
          example: 40199
        status:
          type: string
          example: "ordered"
        paid:
          type: boolean
          example: true
        user_id:
          type: integer
          example: 6
        desk_id:
          type: integer
          example: 5
      required:
        - date_time
        - total_pay
        - status
        - paid
        - products


    reservation:
      type: object
      properties:
        "id":
          type: integer
          example: 1
        "number_of_guests":
          type: integer
          example: 5
        "checkin_date":
          type: string
          example: "1993-12-07 02:42:15"
        "checkout_date":
          type: string
          example: "1993-12-07 04:42:15"
        "name":
          type: string
          example: "Lakatos-Fülöp Judit"
        "phone":
          type: string
          example: "+36 27 257 0914"
        "desk_id":
          type: integer
          example: 13
        "user_id":
          type: integer
          example: 2
        "closed":
          type: boolean
          example: 0
        "desk":
          type: object
          $ref: "#/components/schemas/desk"
        
    desk:
      type: object
      properties:
        "id":
          type: integer
          example: 1
        "number_of_seats":
          type: integer
          example: 8

    user:
      type: object
      required:
        - email
        - password
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: admin
        email:
          type: string
          example: menugenius@gmail.com
          format: email
        password:
          type: string
          example: $2y$12$FSsfwJkLeSn9pVK.CMKmF.Untr.d8aqxQQanOrpEtVTHDCvbqd8yW
        phone:
          type: string
          format: phone
          example: +36 30 123 4567
        admin:
          type: boolean
          example: 1
        rememberToken:
          type: string
          example: q52pArs96Y
        purchases:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/purchase"
        reservations:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/reservation"

    adminPurchaseList:
      type: array
      items:
        $ref: '#/components/schemas/purchase'

    userPurchaseList:
      type: array
      items:
        $ref: '#/components/schemas/purchase'

    adminReservationList:
      type: array
      items:
        $ref: '#/components/schemas/reservation'
        
    userReservationList:
      type: array
      items:
        $ref: '#/components/schemas/reservation'


    error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT